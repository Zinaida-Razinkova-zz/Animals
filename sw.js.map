{"version":3,"sources":["sw.js"],"names":["staticCacheName","dynamicCacheName","staticAssets","checkCache","req","cachedResponse","caches","match","checkOnline","cache","open","res","fetch","put","clone","error","self","addEventListener","addAll","console","log","cachesKeys","checkKeys","keys","map","key","delete","Promise","all","event","request","url","respondWith"],"mappings":";AAAA,MAAMA,EAAkB,kBAClBC,EAAmB,mBAEnBC,EAAe,CACnB,KACA,eAGA,kCACA,aACA,cACA,kBACA,uBAyBF,eAAeC,EAAWC,GAEjBC,aADsBC,OAAOC,MAAMH,IACjBI,EAAYJ,GAGvC,eAAeI,EAAYJ,GACnBK,MAAAA,QAAcH,OAAOI,KAAKT,GAC5B,IACIU,MAAAA,QAAYC,MAAMR,GAEjBO,aADDF,EAAMI,IAAIT,EAAKO,EAAIG,SAClBH,EACP,MAAOI,GACA,aAAMN,EAAMF,MAAMH,IAlC7BY,KAAKC,iBAAiB,UAAW,MAAA,IACzBR,MAAAA,QAAcH,OAAOI,KAAKV,SAC1BS,EAAMS,OAAOhB,GACnBiB,QAAQC,IAAI,mBAGdJ,KAAKC,iBAAiB,WAAY,MAAA,IAC1BI,MACAC,SADmBhB,OAAOiB,QACHC,IAAI,MAAA,IAC3BxB,IAAoByB,SAChBnB,OAAOoB,OAAOD,WAGlBE,QAAQC,IAAIN,GAClBH,QAAQC,IAAI,oBAGdJ,KAAKC,iBAAiB,QAASY,IAC7BV,QAAQC,uBAAuBS,EAAMC,QAAQC,OAC7CF,EAAMG,YAAY7B,EAAW0B,EAAMC","file":"sw.js","sourceRoot":"../src","sourcesContent":["const staticCacheName = 'static-cache-v0';\nconst dynamicCacheName = 'dynamic-cache-v0';\n\nconst staticAssets = [\n  './',\n  './index.html',\n  //   './offline.html',\n  //   './images/no-image.jpg',\n  './images/icons/icon-192x192.png',\n  './index.js',\n  './js/app.js',\n  './js/gallery.js',\n  './js/burger-menu.js',\n];\n\nself.addEventListener('install', async event => {\n  const cache = await caches.open(staticCacheName);\n  await cache.addAll(staticAssets);\n  console.log('[SW]: install');\n});\n\nself.addEventListener('activate', async event => {\n  const cachesKeys = await caches.keys();\n  const checkKeys = cachesKeys.map(async key => {\n    if (staticCacheName !== key) {\n      await caches.delete(key);\n    }\n  });\n  await Promise.all(checkKeys);\n  console.log('[SW]: activate');\n});\n\nself.addEventListener('fetch', event => {\n  console.log(`Trying to fetch ${event.request.url}`);\n  event.respondWith(checkCache(event.request));\n});\n\nasync function checkCache(req) {\n  const cachedResponse = await caches.match(req);\n  return cachedResponse || checkOnline(req);\n}\n\nasync function checkOnline(req) {\n  const cache = await caches.open(dynamicCacheName);\n  try {\n    const res = await fetch(req);\n    await cache.put(req, res.clone());\n    return res;\n  } catch (error) {\n    return await cache.match(req);\n  }\n}\n\n// async function checkOnline(req) {\n//   const cache = await caches.open(dynamicCacheName);\n//   try {\n//     const res = await fetch(req);\n//     await cache.put(req, res.clone());\n//     return res;\n//   } catch (error) {\n//     const cachedRes = await cache.match(req);\n//     if (cachedRes) {\n//       return cachedRes;\n//     } else if (req.url.indexOf('.html') !== -1) {\n//       return caches.match('./offline.html');\n//     } else {\n//       return caches.match('./images/no-image.jpg');\n//     }\n//   }\n// }\n"]}